//--------------------------------------------------------------------------------------------------
// <auto-generated>
//
//     This code was generated by code generator tool.
//
//     To customize the code use your own partial class. For more info about how to use and customize
//     the generated code see the documentation at http://docs.kentico.com.
//
// </auto-generated>
//--------------------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;

using CMS;
using CMS.Base;
using CMS.Helpers;
using CMS.DataEngine;
using CMS.DocumentEngine.Types.KenticoMVCWidgetShowcase;
using CMS.DocumentEngine;

[assembly: RegisterDocumentType(MVCWidget.CLASS_NAME, typeof(MVCWidget))]

namespace CMS.DocumentEngine.Types.KenticoMVCWidgetShowcase
{
	/// <summary>
	/// Represents a content item of type MVCWidget.
	/// </summary>
	public partial class MVCWidget : TreeNode
	{
		#region "Constants and variables"

		/// <summary>
		/// The name of the data class.
		/// </summary>
		public const string CLASS_NAME = "KenticoMVCWidgetShowcase.MVCWidget";


		/// <summary>
		/// The instance of the class that provides extended API for working with MVCWidget fields.
		/// </summary>
		private readonly MVCWidgetFields mFields;

		#endregion


		#region "Properties"

		/// <summary>
		/// MVCWidgetID.
		/// </summary>
		[DatabaseIDField]
		public int MVCWidgetID
		{
			get
			{
				return ValidationHelper.GetInteger(GetValue("MVCWidgetID"), 0);
			}
			set
			{
				SetValue("MVCWidgetID", value);
			}
		}


		/// <summary>
		/// MVC Widget Name.
		/// </summary>
		[DatabaseField]
		public string MVCWidgetName
		{
			get
			{
				return ValidationHelper.GetString(GetValue("MVCWidgetName"), @"");
			}
			set
			{
				SetValue("MVCWidgetName", value);
			}
		}


		/// <summary>
		/// MVC Widget Release Date.
		/// </summary>
		[DatabaseField]
		public DateTime MVCWidgetReleaseDate
		{
			get
			{
				return ValidationHelper.GetDateTime(GetValue("MVCWidgetReleaseDate"), DateTimeHelper.ZERO_TIME);
			}
			set
			{
				SetValue("MVCWidgetReleaseDate", value);
			}
		}


		/// <summary>
		/// MVC Widget Author.
		/// </summary>
		[DatabaseField]
		public string MVCWidgetAuthor
		{
			get
			{
				return ValidationHelper.GetString(GetValue("MVCWidgetAuthor"), @"");
			}
			set
			{
				SetValue("MVCWidgetAuthor", value);
			}
		}


		/// <summary>
		/// MVC Widget Short Description.
		/// </summary>
		[DatabaseField]
		public string MVCWidgetShortDescription
		{
			get
			{
				return ValidationHelper.GetString(GetValue("MVCWidgetShortDescription"), @"");
			}
			set
			{
				SetValue("MVCWidgetShortDescription", value);
			}
		}


		/// <summary>
		/// MVC Widget Description.
		/// </summary>
		[DatabaseField]
		public string MVCWidgetDescription
		{
			get
			{
				return ValidationHelper.GetString(GetValue("MVCWidgetDescription"), @"");
			}
			set
			{
				SetValue("MVCWidgetDescription", value);
			}
		}


		/// <summary>
		/// MVC Widget Screenshot.
		/// </summary>
		[DatabaseField]
		public string MVCWidgetScreenshot
		{
			get
			{
				return ValidationHelper.GetString(GetValue("MVCWidgetScreenshot"), @"");
			}
			set
			{
				SetValue("MVCWidgetScreenshot", value);
			}
		}


		/// <summary>
		/// MVC Widget Package.
		/// </summary>
		[DatabaseField]
		public string MVCWidgetPackage
		{
			get
			{
				return ValidationHelper.GetString(GetValue("MVCWidgetPackage"), @"");
			}
			set
			{
				SetValue("MVCWidgetPackage", value);
			}
		}


		/// <summary>
		/// Gets an object that provides extended API for working with MVCWidget fields.
		/// </summary>
		[RegisterProperty]
		public MVCWidgetFields Fields
		{
			get
			{
				return mFields;
			}
		}


		/// <summary>
		/// Provides extended API for working with MVCWidget fields.
		/// </summary>
		[RegisterAllProperties]
		public partial class MVCWidgetFields : AbstractHierarchicalObject<MVCWidgetFields>
		{
			/// <summary>
			/// The content item of type MVCWidget that is a target of the extended API.
			/// </summary>
			private readonly MVCWidget mInstance;


			/// <summary>
			/// Initializes a new instance of the <see cref="MVCWidgetFields" /> class with the specified content item of type MVCWidget.
			/// </summary>
			/// <param name="instance">The content item of type MVCWidget that is a target of the extended API.</param>
			public MVCWidgetFields(MVCWidget instance)
			{
				mInstance = instance;
			}


			/// <summary>
			/// MVCWidgetID.
			/// </summary>
			public int ID
			{
				get
				{
					return mInstance.MVCWidgetID;
				}
				set
				{
					mInstance.MVCWidgetID = value;
				}
			}


			/// <summary>
			/// MVC Widget Name.
			/// </summary>
			public string Name
			{
				get
				{
					return mInstance.MVCWidgetName;
				}
				set
				{
					mInstance.MVCWidgetName = value;
				}
			}


			/// <summary>
			/// MVC Widget Release Date.
			/// </summary>
			public DateTime ReleaseDate
			{
				get
				{
					return mInstance.MVCWidgetReleaseDate;
				}
				set
				{
					mInstance.MVCWidgetReleaseDate = value;
				}
			}


			/// <summary>
			/// MVC Widget Author.
			/// </summary>
			public string Author
			{
				get
				{
					return mInstance.MVCWidgetAuthor;
				}
				set
				{
					mInstance.MVCWidgetAuthor = value;
				}
			}


			/// <summary>
			/// MVC Widget Short Description.
			/// </summary>
			public string ShortDescription
			{
				get
				{
					return mInstance.MVCWidgetShortDescription;
				}
				set
				{
					mInstance.MVCWidgetShortDescription = value;
				}
			}


			/// <summary>
			/// MVC Widget Description.
			/// </summary>
			public string Description
			{
				get
				{
					return mInstance.MVCWidgetDescription;
				}
				set
				{
					mInstance.MVCWidgetDescription = value;
				}
			}


			/// <summary>
			/// MVC Widget Screenshot.
			/// </summary>
			public string Screenshot
			{
				get
				{
					return mInstance.MVCWidgetScreenshot;
				}
				set
				{
					mInstance.MVCWidgetScreenshot = value;
				}
			}


			/// <summary>
			/// MVC Widget Package.
			/// </summary>
			public string Package
			{
				get
				{
					return mInstance.MVCWidgetPackage;
				}
				set
				{
					mInstance.MVCWidgetPackage = value;
				}
			}
		}

		#endregion


		#region "Constructors"

		/// <summary>
		/// Initializes a new instance of the <see cref="MVCWidget" /> class.
		/// </summary>
		public MVCWidget() : base(CLASS_NAME)
		{
			mFields = new MVCWidgetFields(this);
		}

		#endregion
	}
}